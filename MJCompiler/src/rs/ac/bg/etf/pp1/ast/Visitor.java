// generated with ast extension for cup
// version 0.8
// 25/7/2021 5:8:23


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(VarLoop VarLoop);
    public void visit(Mulop Mulop);
    public void visit(MethodDecl MethodDecl);
    public void visit(ConstLoop ConstLoop);
    public void visit(DesOptBeginArray DesOptBeginArray);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(Assignop Assignop);
    public void visit(MethodType MethodType);
    public void visit(IfCatchCondError IfCatchCondError);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(ClassExtendOpt ClassExtendOpt);
    public void visit(ConstMid ConstMid);
    public void visit(DesignatorOpt DesignatorOpt);
    public void visit(Else Else);
    public void visit(DesignatorOptList DesignatorOptList);
    public void visit(StatementList StatementList);
    public void visit(VarClassDecl VarClassDecl);
    public void visit(Addop Addop);
    public void visit(ElseBegin ElseBegin);
    public void visit(VarClassTail VarClassTail);
    public void visit(Factor Factor);
    public void visit(VarClassMid VarClassMid);
    public void visit(Expres Expres);
    public void visit(CondTerm CondTerm);
    public void visit(ClassMethodOpt ClassMethodOpt);
    public void visit(ArrayOrNot ArrayOrNot);
    public void visit(VarClassDeclListNo VarClassDeclListNo);
    public void visit(DeclList DeclList);
    public void visit(VarMid VarMid);
    public void visit(VarClassDecls VarClassDecls);
    public void visit(VarClassLoop VarClassLoop);
    public void visit(DeclD DeclD);
    public void visit(StartClass StartClass);
    public void visit(Term Term);
    public void visit(ConstD ConstD);
    public void visit(Condition Condition);
    public void visit(DoBegin DoBegin);
    public void visit(CaseList CaseList);
    public void visit(ActParsList ActParsList);
    public void visit(BoolConst BoolConst);
    public void visit(DesignatorName DesignatorName);
    public void visit(PrintStatementExprOpt PrintStatementExprOpt);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(VarClassStart VarClassStart);
    public void visit(VarDecls VarDecls);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(VarClassDeclList VarClassDeclList);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(VarTail VarTail);
    public void visit(ConstTail ConstTail);
    public void visit(FormPars FormPars);
    public void visit(MethodTypeN MethodTypeN);
    public void visit(MullopMod MullopMod);
    public void visit(MullopDiv MullopDiv);
    public void visit(MullopMul MullopMul);
    public void visit(Scalarr Scalarr);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLeOrEq RelopLeOrEq);
    public void visit(RelopLe RelopLe);
    public void visit(RelopGrOrEq RelopGrOrEq);
    public void visit(RelopGr RelopGr);
    public void visit(RelopNotE RelopNotE);
    public void visit(RelopIsE RelopIsE);
    public void visit(Equal Equal);
    public void visit(DesArray DesArray);
    public void visit(NoDesignatorOpt NoDesignatorOpt);
    public void visit(DesignatorOptDot DesignatorOptDot);
    public void visit(DesignatorOpts DesignatorOpts);
    public void visit(Designator Designator);
    public void visit(DesName DesName);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewWithExpr FactorNewWithExpr);
    public void visit(FactorNew FactorNew);
    public void visit(FactorConstBool FactorConstBool);
    public void visit(FactorConstChar FactorConstChar);
    public void visit(FactorConstNum FactorConstNum);
    public void visit(FctorSwitch FctorSwitch);
    public void visit(Var Var);
    public void visit(FuncCallNoPars FuncCallNoPars);
    public void visit(FuncCallWithPars FuncCallWithPars);
    public void visit(TermsMulop TermsMulop);
    public void visit(TermFactor TermFactor);
    public void visit(TermExpr TermExpr);
    public void visit(TermExprMinus TermExprMinus);
    public void visit(AddExpr AddExpr);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(SimpleCondFact SimpleCondFact);
    public void visit(CondTerms CondTerms);
    public void visit(SimpleCondTerm SimpleCondTerm);
    public void visit(Conditions Conditions);
    public void visit(SimpleCondition SimpleCondition);
    public void visit(SimpleActPars SimpleActPars);
    public void visit(ActParsWithComma ActParsWithComma);
    public void visit(ErrorDeclLista ErrorDeclLista);
    public void visit(DesignatorStatementDec DesignatorStatementDec);
    public void visit(DesignatorStatementInc DesignatorStatementInc);
    public void visit(DesignatorStatementNoActPars DesignatorStatementNoActPars);
    public void visit(DesignatorStatementActPars DesignatorStatementActPars);
    public void visit(DesignatorStatementAsign DesignatorStatementAsign);
    public void visit(Case Case);
    public void visit(NoCase NoCase);
    public void visit(Cases Cases);
    public void visit(NoElse NoElse);
    public void visit(ElseExists ElseExists);
    public void visit(DoBeg DoBeg);
    public void visit(StatementStatements StatementStatements);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(SwitchStatement SwitchStatement);
    public void visit(DoStatement DoStatement);
    public void visit(ErrorStmtMatches ErrorStmtMatches);
    public void visit(StatementDesignator StatementDesignator);
    public void visit(IfEnd IfEnd);
    public void visit(ElseBegUnmatched ElseBegUnmatched);
    public void visit(ElseBegMatched ElseBegMatched);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(ErrorIfCondition ErrorIfCondition);
    public void visit(IfCondError IfCondError);
    public void visit(UnmatchedStmt UnmatchedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(FormalParamErrorComma FormalParamErrorComma);
    public void visit(FormalParamDeclNoBracket FormalParamDeclNoBracket);
    public void visit(FormalParsErrorComma FormalParsErrorComma);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(MethodTypeVoid MethodTypeVoid);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDeclar MethodDeclar);
    public void visit(NoMethodeclaDecl NoMethodeclaDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(ClassName ClassName);
    public void visit(ClassDeclNoMethod ClassDeclNoMethod);
    public void visit(ClasssDecl ClasssDecl);
    public void visit(NoClassExt NoClassExt);
    public void visit(ClassExtError ClassExtError);
    public void visit(ClassExt ClassExt);
    public void visit(VarClassDeclTail VarClassDeclTail);
    public void visit(VarrClasssLoop VarrClasssLoop);
    public void visit(VarClassMiddle VarClassMiddle);
    public void visit(ClasssSDeclErr ClasssSDeclErr);
    public void visit(VarClassTailSemi VarClassTailSemi);
    public void visit(VarClassSimpleDeclaration VarClassSimpleDeclaration);
    public void visit(VarClassDeclaration VarClassDeclaration);
    public void visit(VarClassDeclListErrSemi VarClassDeclListErrSemi);
    public void visit(VarClassDeclListErrLbr VarClassDeclListErrLbr);
    public void visit(EmptyVarClassDeclList EmptyVarClassDeclList);
    public void visit(VarClasssDeclListt VarClasssDeclListt);
    public void visit(ClasssDeclErr ClasssDeclErr);
    public void visit(VarClStart VarClStart);
    public void visit(EmptyVarClassDeclNoList EmptyVarClassDeclNoList);
    public void visit(VarClasssDeclNoListt VarClasssDeclNoListt);
    public void visit(VarDeclTail VarDeclTail);
    public void visit(VarrLoop VarrLoop);
    public void visit(VarMidError VarMidError);
    public void visit(VarMiddle VarMiddle);
    public void visit(VarTailError VarTailError);
    public void visit(VarTailSemi VarTailSemi);
    public void visit(VarDeclLoopTail VarDeclLoopTail);
    public void visit(SimpleeeVarDecl SimpleeeVarDecl);
    public void visit(EmptyVarDeclList EmptyVarDeclList);
    public void visit(VarDeclListt VarDeclListt);
    public void visit(NotArray NotArray);
    public void visit(Array Array);
    public void visit(ConstDeclarationTail ConstDeclarationTail);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(ConstMidLoopTail ConstMidLoopTail);
    public void visit(SimpleConstDeclaration SimpleConstDeclaration);
    public void visit(ConstMidError ConstMidError);
    public void visit(ConstMiddle ConstMiddle);
    public void visit(ErrorTail ErrorTail);
    public void visit(TailConst TailConst);
    public void visit(BoolConstant BoolConstant);
    public void visit(CharConst CharConst);
    public void visit(Constant Constant);
    public void visit(False False);
    public void visit(True True);
    public void visit(ErrorDeclDComma ErrorDeclDComma);
    public void visit(ErrorDeclDSemi ErrorDeclDSemi);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoDecl NoDecl);
    public void visit(DeclarationList DeclarationList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
