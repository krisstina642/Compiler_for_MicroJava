INFO  17:37:20,348 - Compiling source file: C:\Users\Kristina\Desktop\prof\MJCompiler\test\program.mj
INFO  17:37:20,379 - #2 program
INFO  17:37:20,379 - #43 test302
INFO  17:37:20,379 - #26 const
INFO  17:37:20,379 - #43 int
INFO  17:37:20,379 - #43 jedan
INFO  17:37:20,379 - #8 =
INFO  17:37:20,379 - #42 1
INFO  17:37:20,379 - #5 ;
INFO  17:37:20,379 - #43 int
INFO  17:37:20,379 - #43 i
INFO  17:37:20,379 - #11 ,
INFO  17:37:20,379 - #43 j
INFO  17:37:20,379 - #5 ;
INFO  17:37:20,379 - #43 bool
INFO  17:37:20,379 - #43 ibool
INFO  17:37:20,379 - #5 ;
INFO  17:37:20,379 - #43 int
INFO  17:37:20,379 - #43 niz
INFO  17:37:20,379 - #27 [
INFO  17:37:20,379 - #25 ]
INFO  17:37:20,379 - #5 ;
INFO  17:37:20,379 - #3 {
INFO  17:37:20,379 - #43 int
INFO  17:37:20,379 - #43 sum
INFO  17:37:20,379 - #6 (
INFO  17:37:20,379 - #43 int
INFO  17:37:20,379 - #43 z
INFO  17:37:20,379 - #11 ,
INFO  17:37:20,379 - #43 int
INFO  17:37:20,379 - #43 d
INFO  17:37:20,379 - #7 )
INFO  17:37:20,379 - #3 {
INFO  17:37:20,379 - #9 return
INFO  17:37:20,379 - #43 z
INFO  17:37:20,379 - #10 +
INFO  17:37:20,379 - #43 d
INFO  17:37:20,395 - #5 ;
INFO  17:37:20,395 - #4 }
INFO  17:37:20,395 - #13 void
INFO  17:37:20,395 - #43 fibonaci
INFO  17:37:20,395 - #6 (
INFO  17:37:20,395 - #43 int
INFO  17:37:20,395 - #43 a
INFO  17:37:20,395 - #27 [
INFO  17:37:20,395 - #25 ]
INFO  17:37:20,395 - #7 )
INFO  17:37:20,395 - #43 int
INFO  17:37:20,395 - #43 pom
INFO  17:37:20,395 - #11 ,
INFO  17:37:20,395 - #43 l
INFO  17:37:20,395 - #5 ;
INFO  17:37:20,395 - #3 {
INFO  17:37:20,395 - #43 pom
INFO  17:37:20,395 - #8 =
INFO  17:37:20,395 - #43 len
INFO  17:37:20,395 - #6 (
INFO  17:37:20,395 - #43 a
INFO  17:37:20,395 - #7 )
INFO  17:37:20,395 - #5 ;
INFO  17:37:20,395 - #51 if
INFO  17:37:20,395 - #6 (
INFO  17:37:20,395 - #43 pom
INFO  17:37:20,395 - #48 <
INFO  17:37:20,395 - #42 1
INFO  17:37:20,395 - #7 )
INFO  17:37:20,395 - #9 return
INFO  17:37:20,395 - #5 ;
INFO  17:37:20,395 - #43 l
INFO  17:37:20,395 - #8 =
INFO  17:37:20,395 - #42 2
INFO  17:37:20,395 - #5 ;
INFO  17:37:20,395 - #43 a
INFO  17:37:20,395 - #27 [
INFO  17:37:20,395 - #42 0
INFO  17:37:20,395 - #25 ]
INFO  17:37:20,395 - #8 =
INFO  17:37:20,395 - #42 0
INFO  17:37:20,395 - #5 ;
INFO  17:37:20,395 - #51 if
INFO  17:37:20,395 - #6 (
INFO  17:37:20,395 - #43 pom
INFO  17:37:20,395 - #48 <
INFO  17:37:20,395 - #42 2
INFO  17:37:20,395 - #7 )
INFO  17:37:20,395 - #9 return
INFO  17:37:20,395 - #5 ;
INFO  17:37:20,395 - #43 a
INFO  17:37:20,395 - #27 [
INFO  17:37:20,395 - #42 1
INFO  17:37:20,395 - #25 ]
INFO  17:37:20,395 - #8 =
INFO  17:37:20,395 - #42 1
INFO  17:37:20,395 - #5 ;
INFO  17:37:20,395 - #51 if
INFO  17:37:20,395 - #6 (
INFO  17:37:20,395 - #43 pom
INFO  17:37:20,395 - #48 <
INFO  17:37:20,395 - #42 3
INFO  17:37:20,395 - #7 )
INFO  17:37:20,395 - #9 return
INFO  17:37:20,395 - #5 ;
INFO  17:37:20,395 - #36 do
INFO  17:37:20,395 - #3 {
INFO  17:37:20,395 - #43 a
INFO  17:37:20,395 - #27 [
INFO  17:37:20,395 - #43 l
INFO  17:37:20,395 - #25 ]
INFO  17:37:20,402 - #8 =
INFO  17:37:20,402 - #43 sum
INFO  17:37:20,402 - #6 (
INFO  17:37:20,402 - #43 a
INFO  17:37:20,402 - #27 [
INFO  17:37:20,402 - #43 l
INFO  17:37:20,402 - #24 -
INFO  17:37:20,402 - #42 1
INFO  17:37:20,402 - #25 ]
INFO  17:37:20,402 - #11 ,
INFO  17:37:20,402 - #43 a
INFO  17:37:20,403 - #27 [
INFO  17:37:20,403 - #43 l
INFO  17:37:20,403 - #24 -
INFO  17:37:20,403 - #42 2
INFO  17:37:20,403 - #25 ]
INFO  17:37:20,403 - #7 )
INFO  17:37:20,403 - #5 ;
INFO  17:37:20,403 - #43 l
INFO  17:37:20,403 - #33 ++
INFO  17:37:20,403 - #5 ;
INFO  17:37:20,403 - #4 }
INFO  17:37:20,403 - #34 while
INFO  17:37:20,403 - #6 (
INFO  17:37:20,403 - #43 l
INFO  17:37:20,403 - #48 <
INFO  17:37:20,403 - #43 pom
INFO  17:37:20,403 - #7 )
INFO  17:37:20,403 - #5 ;
INFO  17:37:20,403 - #4 }
INFO  17:37:20,403 - #13 void
INFO  17:37:20,404 - #43 main
INFO  17:37:20,404 - #6 (
INFO  17:37:20,404 - #7 )
INFO  17:37:20,404 - #3 {
INFO  17:37:20,404 - #43 niz
INFO  17:37:20,404 - #8 =
INFO  17:37:20,404 - #18 new
INFO  17:37:20,404 - #43 int
INFO  17:37:20,404 - #27 [
INFO  17:37:20,404 - #42 10
INFO  17:37:20,404 - #25 ]
INFO  17:37:20,404 - #5 ;
INFO  17:37:20,404 - #43 fibonaci
INFO  17:37:20,404 - #6 (
INFO  17:37:20,404 - #43 niz
INFO  17:37:20,404 - #7 )
INFO  17:37:20,404 - #5 ;
INFO  17:37:20,405 - #43 i
INFO  17:37:20,405 - #8 =
INFO  17:37:20,405 - #42 0
INFO  17:37:20,405 - #5 ;
INFO  17:37:20,405 - #36 do
INFO  17:37:20,405 - #3 {
INFO  17:37:20,405 - #12 print
INFO  17:37:20,405 - #6 (
INFO  17:37:20,405 - #43 niz
INFO  17:37:20,405 - #27 [
INFO  17:37:20,405 - #43 i
INFO  17:37:20,405 - #25 ]
INFO  17:37:20,405 - #7 )
INFO  17:37:20,405 - #5 ;
INFO  17:37:20,405 - #43 i
INFO  17:37:20,405 - #33 ++
INFO  17:37:20,405 - #5 ;
INFO  17:37:20,405 - #4 }
INFO  17:37:20,405 - #34 while
INFO  17:37:20,405 - #6 (
INFO  17:37:20,405 - #43 i
INFO  17:37:20,405 - #48 <
INFO  17:37:20,405 - #43 len
INFO  17:37:20,405 - #6 (
INFO  17:37:20,405 - #43 niz
INFO  17:37:20,405 - #7 )
INFO  17:37:20,405 - #7 )
INFO  17:37:20,405 - #5 ;
INFO  17:37:20,405 - #12 print
INFO  17:37:20,405 - #6 (
INFO  17:37:20,405 - #43 eol
INFO  17:37:20,405 - #7 )
INFO  17:37:20,406 - #5 ;
INFO  17:37:20,406 - #12 print
INFO  17:37:20,406 - #6 (
INFO  17:37:20,406 - #43 i
INFO  17:37:20,406 - #7 )
INFO  17:37:20,406 - #5 ;
INFO  17:37:20,406 - #4 }
INFO  17:37:20,406 - #4 }
INFO  17:37:20,407 - ===================================
INFO  17:37:20,412 - Pretraga na 16(z), nadjeno Var z: int, 0, 1 
INFO  17:37:20,412 - Pretraga na 16(d), nadjeno Var d: int, 1, 1 
INFO  17:37:20,412 - Pretraga na 22(pom), nadjeno Var pom: int, 1, 1 
INFO  17:37:20,412 - Pretraga na 22(a), nadjeno Var a: Arr of int, 0, 1 
INFO  17:37:20,412 - Pretraga na 24(pom), nadjeno Var pom: int, 1, 1 
INFO  17:37:20,412 - Pretraga na 25(l), nadjeno Var l: int, 2, 1 
INFO  17:37:20,412 - Pretraga na 26(a), nadjeno Var a: Arr of int, 0, 1 
INFO  17:37:20,412 - Pretraga na 27(pom), nadjeno Var pom: int, 1, 1 
INFO  17:37:20,412 - Pretraga na 28(a), nadjeno Var a: Arr of int, 0, 1 
INFO  17:37:20,412 - Pretraga na 30(pom), nadjeno Var pom: int, 1, 1 
INFO  17:37:20,412 - Pretraga na 36(l), nadjeno Var l: int, 2, 1 
INFO  17:37:20,412 - Pretraga na 36(a), nadjeno Var a: Arr of int, 0, 1 
INFO  17:37:20,412 - Pretraga na 36(l), nadjeno Var l: int, 2, 1 
INFO  17:37:20,412 - Pretraga na 36(a), nadjeno Var a: Arr of int, 0, 1 
INFO  17:37:20,412 - Pretraga na 36(l), nadjeno Var l: int, 2, 1 
INFO  17:37:20,412 - Pretraga na 36(a), nadjeno Var a: Arr of int, 0, 1 
INFO  17:37:20,412 - Pretraga na 37(l), nadjeno Var l: int, 2, 1 
INFO  17:37:20,412 - Pretraga na 39(l), nadjeno Var l: int, 2, 1 
INFO  17:37:20,412 - Pretraga na 39(pom), nadjeno Var pom: int, 1, 1 
INFO  17:37:20,412 - Pretraga na 49(niz), nadjeno Var niz: Arr of int, 3, 0 
INFO  17:37:20,413 - Pretraga na 50(niz), nadjeno Var niz: Arr of int, 3, 0 
INFO  17:37:20,413 - Pretraga na 51(i), nadjeno Var i: int, 0, 0 
INFO  17:37:20,413 - Pretraga na 55(i), nadjeno Var i: int, 0, 0 
INFO  17:37:20,413 - Pretraga na 55(niz), nadjeno Var niz: Arr of int, 3, 0 
INFO  17:37:20,413 - Pretraga na 56(i), nadjeno Var i: int, 0, 0 
INFO  17:37:20,413 - Pretraga na 58(i), nadjeno Var i: int, 0, 0 
INFO  17:37:20,413 - Pretraga na 58(niz), nadjeno Var niz: Arr of int, 3, 0 
INFO  17:37:20,413 - Pretraga na 60(eol), nadjeno Con eol: char, 10, 0 
INFO  17:37:20,413 - Pretraga na 61(i), nadjeno Var i: int, 0, 0 
INFO  17:37:20,413 -  Print count calls = 0
INFO  17:37:20,413 -  Deklarisanih promenljivih ima = 6
INFO  17:37:20,413 - ===================================
INFO  17:37:20,413 - ===================================
INFO  17:37:20,416 - Parsiranje uspesno zavrseno!
